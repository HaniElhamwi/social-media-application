{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Desktop\\\\\\u0645\\u0641\\u0627\\u0636\\u0644\\u0629\\\\react\\\\firstAppNode\\\\web\\\\src\\\\Components\\\\ProfileMenu.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"./index.css\";\nimport { ButtonBase } from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Slide from \"@material-ui/core/Slide\";\nimport { useHistory } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ProfileMenu(_ref) {\n  _s();\n\n  let {\n    fullName\n  } = _ref;\n  const [dialog, setDialog] = useState(false);\n  let history = useHistory();\n\n  const sureLogOut = () => {\n    history.push(\"/signup\");\n    localStorage.removeItem(\"id\");\n    localStorage.removeItem(\"fullName\");\n    localStorage.removeItem(\"email\");\n  };\n\n  const handleClickOpen = () => {\n    setDialog(true);\n  };\n\n  const handleClose = () => {\n    setDialog(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"survival\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatList\",\n      children: [/*#__PURE__*/_jsxDEV(ButtonBase, {\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"./imagee/Arrow.jpg\",\n          className: \"imageOfProfile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"nameOf\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: fullName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: open,\n      TransitionComponent: Transition,\n      keepMounted: true,\n      onClose: handleClose,\n      \"aria-labelledby\": \"alert-dialog-slide-title\",\n      \"aria-describedby\": \"alert-dialog-slide-description\",\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        id: \"alert-dialog-slide-title\",\n        children: \"Use Google's location service?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(DialogContentText, {\n          id: \"alert-dialog-slide-description\",\n          children: \"Let Google help apps determine location. This means sending anonymous location data to Google, even when no apps are running.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleClose,\n          color: \"primary\",\n          children: \"Disagree\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleClose,\n          color: \"primary\",\n          children: \"Agree\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"setting\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Organize\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Organize\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"icon-string\",\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            class: \"fas fa-sign-out-alt\",\n            id: \"setting--icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"done\",\n          onClick: () => setDialog(true),\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"changeColor\",\n            children: \"Logout\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ProfileMenu, \"pgNFxHQ7Z6hc0IueJhNYo7roRss=\", false, function () {\n  return [useHistory];\n});\n\n_c = ProfileMenu;\nexport default ProfileMenu;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProfileMenu\");","map":{"version":3,"sources":["C:/Users/DELL/Desktop/مفاضلة/react/firstAppNode/web/src/Components/ProfileMenu.js"],"names":["React","useState","ButtonBase","Button","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","Slide","useHistory","ProfileMenu","fullName","dialog","setDialog","history","sureLogOut","push","localStorage","removeItem","handleClickOpen","handleClose","open","Transition"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./index.css\";\r\nimport { ButtonBase } from \"@material-ui/core\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Slide from \"@material-ui/core/Slide\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nfunction ProfileMenu({ fullName }) {\r\n  const [dialog, setDialog] = useState(false);\r\n  let history = useHistory();\r\n\r\n  const sureLogOut = () => {\r\n    history.push(\"/signup\");\r\n    localStorage.removeItem(\"id\");\r\n    localStorage.removeItem(\"fullName\");\r\n    localStorage.removeItem(\"email\");\r\n  };\r\n\r\n  const handleClickOpen = () => {\r\n    setDialog(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setDialog(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"survival\">\r\n      <div className=\"chatList\">\r\n        <ButtonBase>\r\n          <img src=\"./imagee/Arrow.jpg\" className=\"imageOfProfile\" />\r\n        </ButtonBase>\r\n\r\n        <div className=\"nameOf\">\r\n          <p>{fullName}</p>\r\n        </div>\r\n      </div>\r\n\r\n      <Dialog\r\n        open={open}\r\n        TransitionComponent={Transition}\r\n        keepMounted\r\n        onClose={handleClose}\r\n        aria-labelledby=\"alert-dialog-slide-title\"\r\n        aria-describedby=\"alert-dialog-slide-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-slide-title\">\r\n          {\"Use Google's location service?\"}\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-slide-description\">\r\n            Let Google help apps determine location. This means sending\r\n            anonymous location data to Google, even when no apps are running.\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Disagree\r\n          </Button>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Agree\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n      <div className=\"setting\">\r\n        <div className=\"Organize\"></div>\r\n\r\n        <div className=\"Organize\">\r\n          <div className=\"icon-string\">\r\n            <i class=\"fas fa-sign-out-alt\" id=\"setting--icon\"></i>\r\n          </div>\r\n          <div className=\"done\" onClick={() => setDialog(true)}>\r\n            <p className=\"changeColor\">Logout</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProfileMenu;\r\n"]},"metadata":{},"sourceType":"module"}