{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Desktop\\\\\\u0645\\u0641\\u0627\\u0636\\u0644\\u0629\\\\react\\\\firstAppNode\\\\web\\\\src\\\\Pages\\\\Chat\\\\ChatApp.js\",\n    _s = $RefreshSig$();\n\nimport ProfileMenu from \"../../Components/ProfileMenu\";\nimport UsersList from \"../../Components/UsersList\";\nimport MessagesView from \"../../Components/MessagesView\";\nimport \"./apo.css\";\nimport { useUser } from \"../../hooks/useUser\";\nimport { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ChatApp() {\n  _s();\n\n  let history = useHistory();\n  const {\n    email,\n    fullName,\n    id\n  } = useUser();\n  const [selectedChatingUser, setSelectedChatingUser] = useState();\n  const [dialog, setDialog] = useState(false);\n\n  const sureLogOut = () => {\n    history.push(\"/signup\");\n    localStorage.removeItem(\"id\");\n    localStorage.removeItem(\"fullName\");\n    localStorage.removeItem(\"email\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Father\",\n    children: [/*#__PURE__*/_jsxDEV(Dialog, {\n      open: open,\n      TransitionComponent: Transition,\n      keepMounted: true,\n      onClose: handleClose,\n      \"aria-labelledby\": \"alert-dialog-slide-title\",\n      \"aria-describedby\": \"alert-dialog-slide-description\",\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        id: \"alert-dialog-slide-title\",\n        children: \"Use Google's location service?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(DialogContentText, {\n          id: \"alert-dialog-slide-description\",\n          children: \"Let Google help apps determine location. This means sending anonymous location data to Google, even when no apps are running.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleClose,\n          color: \"primary\",\n          children: \"Disagree\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleClose,\n          color: \"primary\",\n          children: \"Agree\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ComponentCommon\",\n      children: [/*#__PURE__*/_jsxDEV(ProfileMenu, {\n        fullName: fullName,\n        setDialog: setDialog\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(UsersList, {\n        selectedChatingUser: selectedChatingUser,\n        setSelectedChatingUser: setSelectedChatingUser\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MessagesView, {\n        selectedChatingUser: selectedChatingUser\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ChatApp, \"GMkb/NQOAPARygQQ+RG5/jtYZpQ=\", false, function () {\n  return [useHistory, useUser];\n});\n\n_c = ChatApp;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatApp\");","map":{"version":3,"sources":["C:/Users/DELL/Desktop/مفاضلة/react/firstAppNode/web/src/Pages/Chat/ChatApp.js"],"names":["ProfileMenu","UsersList","MessagesView","useUser","useState","useHistory","ChatApp","history","email","fullName","id","selectedChatingUser","setSelectedChatingUser","dialog","setDialog","sureLogOut","push","localStorage","removeItem","open","Transition","handleClose"],"mappings":";;;AAAA,OAAOA,WAAP,MAAwB,8BAAxB;AACA,OAAOC,SAAP,MAAsB,4BAAtB;AACA,OAAOC,YAAP,MAAyB,+BAAzB;AACA,OAAO,WAAP;AACA,SAASC,OAAT,QAAwB,qBAAxB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,UAAT,QAA2B,kBAA3B;;AAEA,eAAe,SAASC,OAAT,GAAmB;AAAA;;AAChC,MAAIC,OAAO,GAAGF,UAAU,EAAxB;AACA,QAAM;AAAEG,IAAAA,KAAF;AAASC,IAAAA,QAAT;AAAmBC,IAAAA;AAAnB,MAA0BP,OAAO,EAAvC;AACA,QAAM,CAACQ,mBAAD,EAAsBC,sBAAtB,IAAgDR,QAAQ,EAA9D;AACA,QAAM,CAACS,MAAD,EAASC,SAAT,IAAsBV,QAAQ,CAAC,KAAD,CAApC;;AAEA,QAAMW,UAAU,GAAG,MAAM;AACvBR,IAAAA,OAAO,CAACS,IAAR,CAAa,SAAb;AACAC,IAAAA,YAAY,CAACC,UAAb,CAAwB,IAAxB;AACAD,IAAAA,YAAY,CAACC,UAAb,CAAwB,UAAxB;AACAD,IAAAA,YAAY,CAACC,UAAb,CAAwB,OAAxB;AACD,GALD;;AAOA,sBACE;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA,4BAyBE,QAAC,MAAD;AACE,MAAA,IAAI,EAAEC,IADR;AAEE,MAAA,mBAAmB,EAAEC,UAFvB;AAGE,MAAA,WAAW,MAHb;AAIE,MAAA,OAAO,EAAEC,WAJX;AAKE,yBAAgB,0BALlB;AAME,0BAAiB,gCANnB;AAAA,8BAQE,QAAC,WAAD;AAAa,QAAA,EAAE,EAAC,0BAAhB;AAAA,kBACG;AADH;AAAA;AAAA;AAAA;AAAA,cARF,eAWE,QAAC,aAAD;AAAA,+BACE,QAAC,iBAAD;AAAmB,UAAA,EAAE,EAAC,gCAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAXF,eAiBE,QAAC,aAAD;AAAA,gCACE,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAEA,WAAjB;AAA8B,UAAA,KAAK,EAAC,SAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAEA,WAAjB;AAA8B,UAAA,KAAK,EAAC,SAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,cAjBF;AAAA;AAAA;AAAA;AAAA;AAAA,YAzBF,eAoDE;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA,8BACE,QAAC,WAAD;AAAa,QAAA,QAAQ,EAAEZ,QAAvB;AAAiC,QAAA,SAAS,EAAEK;AAA5C;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,SAAD;AACE,QAAA,mBAAmB,EAAEH,mBADvB;AAEE,QAAA,sBAAsB,EAAEC;AAF1B;AAAA;AAAA;AAAA;AAAA,cAFF,eAOE,QAAC,YAAD;AAAc,QAAA,mBAAmB,EAAED;AAAnC;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA,YApDF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgED;;GA7EuBL,O;UACRD,U,EACkBF,O;;;KAFVG,O","sourcesContent":["import ProfileMenu from \"../../Components/ProfileMenu\";\r\nimport UsersList from \"../../Components/UsersList\";\r\nimport MessagesView from \"../../Components/MessagesView\";\r\nimport \"./apo.css\";\r\nimport { useUser } from \"../../hooks/useUser\";\r\nimport { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport default function ChatApp() {\r\n  let history = useHistory();\r\n  const { email, fullName, id } = useUser();\r\n  const [selectedChatingUser, setSelectedChatingUser] = useState();\r\n  const [dialog, setDialog] = useState(false);\r\n\r\n  const sureLogOut = () => {\r\n    history.push(\"/signup\");\r\n    localStorage.removeItem(\"id\");\r\n    localStorage.removeItem(\"fullName\");\r\n    localStorage.removeItem(\"email\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"Father\">\r\n      {/* {dialog == 2 ? (\r\n        <div className=\"dialogOfLogOut\">\r\n          <div className=\"dialog\">\r\n            <h1>LogOut</h1>\r\n\r\n            <p>are you sure that you want to log out </p>\r\n            <div className=\"yesNo\">\r\n              <div className=\"yes\" onClick={() => sureLogOut()}>\r\n                <i class=\"fas fa-check\"></i>\r\n              </div>\r\n              <div\r\n                className=\"NO\"\r\n                onClick={() => {\r\n                   \r\n                  setDialog(1);\r\n                }}\r\n              >\r\n                <i class=\"fas fa-times\"></i>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ) : null} */}\r\n\r\n      <Dialog\r\n        open={open}\r\n        TransitionComponent={Transition}\r\n        keepMounted\r\n        onClose={handleClose}\r\n        aria-labelledby=\"alert-dialog-slide-title\"\r\n        aria-describedby=\"alert-dialog-slide-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-slide-title\">\r\n          {\"Use Google's location service?\"}\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-slide-description\">\r\n            Let Google help apps determine location. This means sending\r\n            anonymous location data to Google, even when no apps are running.\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Disagree\r\n          </Button>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Agree\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n      <div className=\"ComponentCommon\">\r\n        <ProfileMenu fullName={fullName} setDialog={setDialog} />\r\n        <UsersList\r\n          selectedChatingUser={selectedChatingUser}\r\n          setSelectedChatingUser={setSelectedChatingUser}\r\n        />\r\n\r\n        <MessagesView selectedChatingUser={selectedChatingUser} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}